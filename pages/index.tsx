import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import { useState } from "react";
import { decodingJWT } from "../common";
import { Box, Button } from "@mui/material";
import Monitor from "../components/axios_monitor/monitor";
import AxiosMonitor from "../components/axios_monitor";
import useAxiosInterceptor from "../common/stores/axios_interceptor";
import userInfo from "../common/stores/user_info";
import loginInfo from "../common/stores/login_info";
import { useRouter } from 'next/navigation'
import Loader from "../common/Loader";
import useLoader from "../common/Loader/hook";
import { useSearchParams } from 'next/navigation'
import EnvComponent from "../components/env";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  //const axiosMonitor = AxiosMonitor();
  //const { makeRequest } = axiosMonitor;
  const { getEnv, setUserInfo } = userInfo();
  const { setLoginInfo, getLoginInfo } = loginInfo();
  const { setInterceptor, updateInterceptor, getOpenInterceptor, setOpenInterceptor } = useAxiosInterceptor();
  const router: any = useRouter();
  const { setLoader } = useLoader();

  const [ChainId, setChainId] = useState<string>(getLoginInfo().ChainId);
  const [User, setUser] = useState<string>(getLoginInfo().User);
  const [Password, setPassword] = useState<string>(getLoginInfo().Password);
  const [Cookie, setCookie] = useState<string>(getLoginInfo().Cookie);

  const envValue = getEnv();

  const generateLocalStorageData = (response: any) => {
    if (response?.data?.id_token) {
      const tokenDecoded = decodingJWT(response.data.id_token);
      setUserInfo({
        chainId: ChainId,
        token: response.data.id_token,
        expiration: tokenDecoded.exp * 1000,
        UUID: tokenDecoded["custom:idSenderGlobal"],
        cookie: Cookie,
      });
    }
  }

  const login = async () => {
    setLoader(true);
    try {
      const url = `https://${envValue || 'uat'}-vianex.viamericas.io/v2/risk/${ChainId}/authentication/signin`;
      const body = {
        email: User,
        password: Password,
        devicekey: "",
      };
      const headers = {
        'Content-Type': 'application/json',
        'X-Client-Headers': `{"Cookie":"${Cookie}","Remote Address":"190.27.142.70, 130.176.214.237","User-Agent":"PostmanRuntime/7.29.2"}`,
        //withCredentials: true
      }
      const response: any = await AxiosMonitor({
        urlApi: url,
        method: "POST",
        bodyRequest: body,
        headers: headers,
      }, setInterceptor, updateInterceptor, getOpenInterceptor, setOpenInterceptor);
      generateLocalStorageData(response);
      setLoginInfo(ChainId, User, Password, Cookie);
      router.push(`/sender${envValue ? '?env=' + envValue : ''}`);
      //alert(`Response => ${JSON.stringify(response)}`);

    }
    catch (e : any) {
      console.log(e);
      if (e.response?.data) {
        alert(typeof e.response?.data === "object" ? JSON.stringify(e.response?.data) : e.response?.data)
      }
      else alert("An error has occurred, check the logs");
    }
    setLoader(false);
  };

  return (
    <Box sx={{ display: 'flex' }}>
      <Monitor />
      <Loader />
      <EnvComponent />
      <Box component="main" sx={{ flexGrow: 1, p: 3 }}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.main}>
          <h2 className={inter.className}>Login</h2>
          <div style={{ width: "80%", margin: "auto" }}>
            <div style={{ margin: "15px 0px" }}>
              <h3 className={inter.className}>Chain Id</h3>
              <input
                style={{
                  width: "100%",
                  fontSize: "20px",
                  fontFamily: "monospace",
                  padding: "10px",
                  margin: "10px 0px 0px 10px",
                }}
                onChange={(value) => setChainId(value.target.value)}
                defaultValue={ChainId}
              ></input>
            </div>
            <div style={{ margin: "15px 0px" }}>
              <h3 className={inter.className}>Usuario</h3>
              <input
                style={{
                  width: "100%",
                  fontSize: "20px",
                  fontFamily: "monospace",
                  padding: "10px",
                  margin: "10px 0px 0px 10px",
                }}
                onChange={(value) => setUser(value.target.value)}
                defaultValue={User}
              ></input>
            </div>
            <div>
              <h3 className={inter.className}>Contraseña</h3>
              <input
                type="password"
                style={{
                  width: "100%",
                  fontSize: "20px",
                  fontFamily: "monospace",
                  padding: "10px",
                  margin: "10px 0px 0px 10px",
                }}
                onChange={(value) => setPassword(value.target.value)}
                defaultValue={Password}
              ></input>
            </div>
            <div>
              <h3 className={inter.className}>Cookie</h3>
              <input
                type="text"
                style={{
                  width: "100%",
                  fontSize: "20px",
                  fontFamily: "monospace",
                  padding: "10px",
                  margin: "10px 0px 0px 10px",
                }}
                onChange={(value) => setCookie(value.target.value)}
                defaultValue={Cookie}
              ></input>
            </div>
            <div>
              <button
                style={{
                  padding: "10px 15px",
                  minWidth: "125px",
                  fontSize: "18px",
                  float: "right",
                  margin: "10px -10px",
                  cursor: "pointer",
                }}
                onClick={login}
              >
                Enviar
              </button>
            </div>
            <div>
              <Button
                variant="text"
                style={{
                  padding: "10px 15px",
                  minWidth: "125px",
                  fontSize: "18px",
                  margin: "10px -10px",
                  cursor: "pointer",
                  textDecoration: "underline",
                }}
                onClick={() => router.push(`/register${envValue ? '?env=' + envValue : ''}`)}
              >
                Registrate Aquí
              </Button>
            </div>
          </div>
        </main>
      </Box>
    </Box>
  );
}
